
state 0
	$accept: .program $end 

	NUMBER  shift 5
	BOOLEAN  shift 6
	\'  shift 4
	(  shift 7
	.  error

	program  goto 1
	expr  goto 2
	const  goto 3

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  expr.    (1)

	.  reduce 1 (src line 22)


state 3
	expr:  const.    (2)

	.  reduce 2 (src line 31)


state 4
	expr:  \'.expr 

	NUMBER  shift 5
	BOOLEAN  shift 6
	\'  shift 4
	(  shift 7
	.  error

	expr  goto 8
	const  goto 3

state 5
	const:  NUMBER.    (4)

	.  reduce 4 (src line 37)


state 6
	const:  BOOLEAN.    (5)

	.  reduce 5 (src line 40)


state 7
	const:  (.) 

	)  shift 9
	.  error


state 8
	expr:  \' expr.    (3)

	.  reduce 3 (src line 34)


state 9
	const:  ( ).    (6)

	.  reduce 6 (src line 42)


8 terminals, 4 nonterminals
7 grammar rules, 10/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
53 working sets used
memory: parser 4/30000
0 extra closures
9 shift entries, 1 exceptions
4 goto entries
1 entries saved by goto default
Optimizer space used: output 10/30000
10 table entries, 1 zero
maximum spread: 8, maximum offset: 8
